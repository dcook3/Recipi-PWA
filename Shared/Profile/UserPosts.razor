@using Recipi_PWA.Services;
@using Recipi_PWA.Models;
@inject IPostService postService;

@if(status == "loading")
{
    <LoadingSpinner></LoadingSpinner>
}
else if(status == "error")
{
    <div class="text-danger">Error @eMessage</div>
}
else
{
    <div class="d-flex flex-column container-fluid p-0 m-0">
    @for(int i = 0; i < posts.Count; i+=3)
    {
        <div class="d-flex flex-row container-fluid p-0" style="margin-top: 0; margin-bottom: .5vw;">
        @for(int y = i; y < i+3; y++)
        {
            if(y < posts.Count)
            {
                <div class="my-0" style="@((y-i == 1) ? "margin-left: .5vw; margin-right: .5vw;": "") height: 33vw;">
                    <PostThumbnail post="@posts.ElementAt(y)"></PostThumbnail>
                </div>
            }
        }
        </div>
    }
    </div>
}

@code {
    [Parameter]
    public int userId { get; set; }

    private List<PostPreview> posts = new();

    private string status = "loading";

    private string eMessage = "";

    protected override async Task OnInitializedAsync()
    {
        var response = await postService.GetUserPosts(userId);

        if (response.IsSuccessStatusCode)
        {
            posts = await response.Content.ReadFromJsonAsync<List<PostPreview>>();

            status = "ready";
        }
        else
        {
            status = "error";
            eMessage = "Error loading posts";
        }
    }
}
