@using Recipi_PWA.Services
@using Recipi_PWA.Models;
@using System.Text.Json;

@inject StateContainer state
@inject NavigationManager navi
@inject IIngredientService service

@page "/IngredientSelector/{recipeId:int}"

<TopViewport>
    <div class="row justify-content-center pt-1">
        <a @onclick="BackToRecipeEditor" class="fs-2 col-1 me-5 text-decoration-none">‹</a> @*This will go back*@
        <h3 class="text-white col-auto ms-5 d-inline-block">Ingredients</h3>
        <a class="fs-2 col-2 me-5 text-decoration-none"></a>
    </div>
</TopViewport>

<p>@recipe.recipeSteps[0].stepDescription</p>

@*<div class="d-flex flex-column align-items-center" style="width: 100%;">
    @foreach (Ingredient ing in ingredients)
    {

    }
</div>*@

@code {
    [Parameter]
    public int recipeId { get; set; } //use to get back to recipe editor

    [Parameter]
    public int stepId { get; set; }

    List<Ingredient> ingredients = new();

    private Recipe recipe;

    protected override async Task OnInitializedAsync()
    {
        recipe = await state.GetRecipe();
        HttpResponseMessage response = await service.GetIngredients();
        if (response.IsSuccessStatusCode)
        {
            string jsonString = await response.Content.ReadAsStringAsync();
            ingredients = JsonSerializer.Deserialize<List<Ingredient>>(jsonString) ?? new();
        }
        else
        {
            Console.WriteLine("There was a problem while fetching ingredients from the server. Please reload or try again later.");
        }
    }

    private void BackToRecipeEditor()
    {
        navi.NavigateTo("/RecipeEditor/@recipeId");
    }

}
