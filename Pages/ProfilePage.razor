@using Recipi_PWA.Models;
@using System.Text.Json;
@using Recipi_PWA.Shared.Profile
@page "/Profile/{userId}"
@inject StateContainer state;
@inject IUserService userService;
@inject NavigationManager NavigationManager;
@inject PageHistoryState history

@if (status == "error")
{
    <div>Error @eMessage</div>
}
else{
    @if(status == "loading"){
        <LoadingSpinner></LoadingSpinner>
    }
    else
    {
        <ProfileHeader self=@self user="@user"></ProfileHeader>
        <ProfileBody self=@self userId="@user.UserId"></ProfileBody>
    }
}

@code {
    private bool self;
    private string status;
    private string eMessage;
    [Parameter]
    public string userId { get; set; }

    private IUserProfile? user { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        status = "loading";
        Console.WriteLine(userId);
        if (!String.IsNullOrEmpty(userId))
        {
            Console.WriteLine("'"+userId + "' '" + state.You?.UserId + "'");

            if (userId == state.You?.UserId.ToString())
            {
                NavigationManager.NavigateTo("/Profile/me");
                userId = "me";
            }

            self = userId == "me";

            if (self)
            {
                if (state.LoggedIn)
                {
                    var response = await userService.GetUserById(userId);
                    if (response.IsSuccessStatusCode)
                    {
                        var you = await response.Content.ReadFromJsonAsync<You>();
                        if (you != null)
                        {
                            await state.SetYou(you);
                            Console.WriteLine(JsonSerializer.Serialize(you));
                            user = you;
                            status = "ready";
                        }
                        else
                        {
                            status = "error";
                            eMessage = "Error occurred: " + response.Content.ToString();
                        }

                    }
                    else
                    {
                        status = "error";
                        eMessage = response.Content.ToString();
                    }
                }
                else
                {
                    //navigate to login
                    Console.WriteLine("Navigate to login");
                }
            }
            else
            {


                var response = await userService.GetUserById(userId);
                if (response.IsSuccessStatusCode)
                {
                    var userRes = await response.Content.ReadFromJsonAsync<UserProfile>();
                    if (userRes != null)
                    {
                        user = userRes;
                        status = "ready";
                    }
                    else
                    {
                        status = "error";
                        eMessage = response.Content.ToString();
                    }
                }
                else
                {
                    status = "error";
                    eMessage = response.Content.ToString();
                }
                
            }
        }
    }


}
