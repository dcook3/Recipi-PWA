@page "/CookbookViewer"

@using Recipi_PWA.Shared.Profile
@using Recipi_PWA.Models
@using Recipi_PWA.Services;
@inject StateContainer state
@inject HttpClient http
@inject NavigationManager navi
@inject IRecipeService recipeService

<TopViewport>
    <div class="row justify-content-center mt-1">
        <a href="this will be the last page from a navigation service" class="fs-2 col-1 me-5 text-decoration-none">‹</a> @*This will go back*@
        <h3 class="text-white col-auto ms-5 d-inline-block">Your Cookbook</h3>
        <a class="fs-2 col-2 me-5 text-decoration-none"></a>
    </div>
</TopViewport>

@if (recipes.Count > 0)
    @foreach(var recipe in recipes)
    {
        <CookbookRecipeCard recipe="recipe" OnClick="() => HandleRecipeNav(recipe.RecipeId)"/>
    }

@code {
    private List<CookbookRecipe> recipes = new();

    protected override async Task OnInitializedAsync()
    {
        if (state.LoggedIn)
        {
            HttpResponseMessage response = await recipeService.GetCookbook("");
            if (response.IsSuccessStatusCode)
            {
                recipes = await response.Content.ReadFromJsonAsync<List<CookbookRecipe>>() ?? new();
            }
        }
        else
        {
            navi.NavigateTo("/Login");
        }
    }

    private void HandleRecipeNav(int recipeId) => navi.NavigateTo($"/RecipeEditor/{recipeId}");
}
